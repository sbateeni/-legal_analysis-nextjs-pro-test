// Multi-tenant Prisma schema: users, organizations, memberships, subscriptions, usage

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  passwordHash  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  memberships   Membership[]
  sessions      Session[]
}

model Organization {
  id            String         @id @default(cuid())
  name          String
  slug          String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  memberships   Membership[]
  subscriptions Subscription[]
  usageCounters UsageCounter[]
}

model Membership {
  id              String        @id @default(cuid())
  role            MembershipRole
  userId          String
  organizationId  String
  createdAt       DateTime      @default(now())

  user            User          @relation(fields: [userId], references: [id])
  organization    Organization  @relation(fields: [organizationId], references: [id])

  @@unique([userId, organizationId])
}

enum MembershipRole {
  OWNER
  ADMIN
  MEMBER
}

model Subscription {
  id               String       @id @default(cuid())
  provider         String       // stripe
  status           String       // active, trialing, canceled
  priceId          String?
  customerId       String?
  subscriptionId   String? @unique
  currentPeriodEnd DateTime?
  organizationId   String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  organization     Organization @relation(fields: [organizationId], references: [id])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model UsageCounter {
  id             String       @id @default(cuid())
  organizationId String
  periodStart    DateTime     // month start
  periodEnd      DateTime     // month end
  requests       Int          @default(0)

  organization   Organization @relation(fields: [organizationId], references: [id])

  @@unique([organizationId, periodStart, periodEnd])
}


